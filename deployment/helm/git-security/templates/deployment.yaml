apiVersion: apps/v1
kind: Deployment
metadata:
  name: git-security
  labels:
    app.kubernetes.io/name: git-security
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: git-security
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: git-security
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: git-security
        env:
        - name: GIT_SECURITY_DB
          value: mongo
        - name: GITHUB_HOST
          value: {{ .Values.envs.GITHUB_HOST }}
        - name: GIT_SECURITY_DEBUG
          value: "true"
        - name: HTTPS_SSL_CERT_LOCATION
          value: "/etc/git-security/server.crt"
        - name: HTTPS_SSL_KEY_LOCATION
          value: "/etc/git-security/server.key"
        - name: GIT_SECURITY_CACERT
          value: "/etc/git-security/ca.crt"
        - name: GH_TOKEN
          valueFrom:
            secretKeyRef:
              name: git-security-secrets
              key: GH_TOKEN
        - name: GIT_SECURITY_KEY
          valueFrom:
            secretKeyRef:
              name: git-security-secrets
              key: GIT_SECURITY_KEY
        - name: GIT_SECURITY_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: git-security-secrets
              key: GIT_SECURITY_ADMIN_USERNAME
        - name: GIT_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: git-security-secrets
              key: GIT_SECURITY_ADMIN_PASSWORD
        - name: DOCKER_HOST
          value: tcp://localhost:2376
        - name: DOCKER_TLS_VERIFY
          value: "1"
        - name: DOCKER_CERT_PATH
          value: '/var/lib/docker/certs/client'
        ports:
        - containerPort: 443
          name: https
          protocol: TCP
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - mountPath: /etc/git-security
          name: git-security-secrets
          readOnly: true
        - mountPath: /var/lib/docker
          name: var-dind-volume
      - image: "{{ .Values.dindImage.repository }}:{{ .Values.dindImage.tag }}"
        imagePullPolicy: {{ .Values.dindImage.pullPolicy }}
        name: dind
        env:
        - name: DOCKER_TLS_CERTDIR
          value: '/var/lib/docker/certs'
        securityContext:
          allowPrivilegeEscalation: true
          privileged: true
        ports:
        - containerPort: 2376
          name: https
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/docker
          name: var-dind-volume
      - image: "{{ .Values.mongoImage.repository }}:{{ .Values.mongoImage.tag }}"
        imagePullPolicy: {{ .Values.mongoImage.pullPolicy }}
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: admin
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: password
        name: mongo
        ports:
        - containerPort: 27017
          name: mongo
          protocol: TCP
        resources:
          {{- toYaml .Values.dbresources | nindent 12 }}
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /data/db
          name: var-git-security-volume
      serviceAccountName: default
      volumes:
      - name: git-security-secrets
        secret:
          defaultMode: 420
          secretName: git-security-secrets
      - name: var-git-security-volume
        persistentVolumeClaim:
          claimName: git-security-pvc
      - name: var-dind-volume
        persistentVolumeClaim:
          claimName: dind-pvc
